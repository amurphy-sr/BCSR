echo '<div style="padding-left:5px;line-height:15px;">Removing Unused Meta Settings...';
				mysql_query("DELETE FROM `" . HC_TblPrefix . "settingsmeta` WHERE `PkID`=14");
				mysql_query("DELETE FROM `" . HC_TblPrefix . "settingsmeta` WHERE `PkID`=15");
				mysql_query("DELETE FROM `" . HC_TblPrefix . "settingsmeta` WHERE `PkID`=16");
				mysql_query("DELETE FROM `" . HC_TblPrefix . "settingsmeta` WHERE `PkID`=17");
				echo '<b>Finished</b></div>';
				echo '<div style="padding-left:5px;line-height:15px;">Updating Settings...';
				mysql_query("UPDATE `" . HC_TblPrefix . "settings` SET `SettingValue` = NULL WHERE `PkID` = 25");
				mysql_query("UPDATE `" . HC_TblPrefix . "settings` SET `SettingValue` = '0' WHERE `PkID` = 53");
				mysql_query("UPDATE `" . HC_TblPrefix . "settings` SET `SettingValue` = '14' WHERE `PkID` = 55");
				echo '<b>Finished</b></div>';
				$status = doUpgrade($status, "Altering <i>" . HC_TblPrefix . "events</i> Table...",
                                   "ALTER TABLE `" . HC_TblPrefix . "events` DROP COLUMN `Tweetments`");
				$status = doUpgrade($status, "Altering <i>" . HC_TblPrefix . "locations</i> Table...",
                                   "ALTER TABLE `" . HC_TblPrefix . "locations` CHANGE COLUMN `Name` `Name` VARCHAR(250) NULL DEFAULT NULL AFTER `PkID`");
				$status = doUpgrade($status, "Altering <i>" . HC_TblPrefix . "locations</i> Table...",
                                   "ALTER TABLE `" . HC_TblPrefix . "locations` ADD COLUMN `ShortURL` VARCHAR(50) NULL AFTER `GoogleAcc`");
				$status = doUpgrade($status, "Altering <i>" . HC_TblPrefix . "locations</i> Table...",
                                   "ALTER TABLE `" . HC_TblPrefix . "locations` ADD COLUMN `Views` INT(11) UNSIGNED NULL AFTER `ShortURL`");
				$status = doUpgrade($status, "Altering <i>" . HC_TblPrefix . "sendtofriend</i> Table...",
                                   "ALTER TABLE `" . HC_TblPrefix . "sendtofriend` ADD COLUMN `TypeID` TINYINT(3) UNSIGNED NOT NULL DEFAULT '0' AFTER `SendDate`");
				$status = doUpgrade($status, "Altering <i>" . HC_TblPrefix . "sendtofriend</i> Table...",
                                   "ALTER TABLE `" . HC_TblPrefix . "sendtofriend` CHANGE COLUMN `EventID` `EntityID` INT(11) UNSIGNED NULL DEFAULT NULL AFTER `Message`");